spring.application.name=chat-app-backend
#Tomcat server port number 8080
# Here instead of MySQL we are using MongoDB for realtime chats
#   Schema-less flexibility: You can easily evolve your Message or Room structure without migrations.
#   High write performance: Great for real-time chat, especially with high message volumes.
#   Embedded documents: Store messages directly inside rooms (ideal for chat apps with small/medium-sized history).
#   Horizontal scaling: Better suited if you expect to scale massively.

spring.data.mongodb.uri=mongodb://localhost:27017/Chatapp

